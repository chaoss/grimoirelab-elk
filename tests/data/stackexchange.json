[{
    "backend_name": "StackExchange",
    "backend_version": "0.2.0",
    "data": {
        "answer_count": 2,
        "answers": [
            {
                "answer_id": 38611682,
                "body_markdown": "Is this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\nIs this what you are looking for:\r\nif `L =  [-0.4, 0.2, 0, 0.2, 0]`\r\n\r\n    AllCombi = itertools.permutations(L)\r\n\r\n    for each in AllCombi:\r\n        print each\r\n\r\n\r\n\r\n",
                "can_flag": false,
                "comment_count": 0,
                "creation_date": 1469618876,
                "down_vote_count": 2,
                "is_accepted": false,
                "last_activity_date": 1469618876,
                "link": "http://stackoverflow.com/questions/38611467/python-get-every-possible-combination-of-weights-for-a-portfolio/38611682#38611682",
                "owner": {
                    "badge_counts": {
                        "bronze": 1,
                        "gold": 0,
                        "silver": 0
                    },
                    "display_name": "aady",
                    "link": "http://stackoverflow.com/users/2047752/aady",
                    "profile_image": "https://www.gravatar.com/avatar/c89eeeb006a55046f0df0ca87d639a5c?s=128&d=identicon&r=PG",
                    "reputation": 27,
                    "user_id": 2047752,
                    "user_type": "registered"
                },
                "question_id": 38611467,
                "score": -2,
                "tags": [],
                "title": "Python: get every possible combination of weights for a portfolio",
                "up_vote_count": 0
            },
            {
                "answer_id": 38611752,
                "body_markdown": "If you just want a list of all the combinations, use [`itertools.combinations`][1]:\r\n\r\n    w = [-0.4, -0.2, 0, 0.2, 0.4]\r\n    l = len(w)\r\n    \r\n    if __name__ == '__main__':\r\n        for i in xrange(1, l+1):\r\n            for p in itertools.combinations(w, i):\r\n                print p\r\n\r\nIf you want to count the different weights that can be created with these combinations, it's a bit more complicated.\r\n\r\n\r\nFirst, you generate permutations with 1, 2, 3, ... elements. Then you take the sum of them. Then you add the sum to the set (will no do anything if the number is already present, very fast operation). Finally you convert to a list and sort it.\r\n\r\n    from itertools import combinations\r\n    \r\n    def round_it(n, p):\r\n        \"\"\"rounds n, to have maximum p figures to the right of the comma\"\"\"\r\n        return int((10**p)*n)/float(10**p)\r\n    \r\n    w = [-0.4, -0.2, 0, 0.2, 0.4]\r\n    l = len(w)\r\n    res = set()\r\n    \r\n    if __name__ == '__main__':\r\n        for i in xrange(1, l+1):\r\n            for p in combinations(w, i):\r\n                res.add(round_it(sum(p), 3))\r\n        \r\n        print sorted(list(res))\r\n\r\n\r\n  [1]: http://stackoverflow.com/documentation/python/1564/itertools-module/9828/itertools-combinations#t=201607271138098681664",
                "can_flag": false,
                "comment_count": 0,
                "creation_date": 1469619099,
                "down_vote_count": 0,
                "is_accepted": false,
                "last_activity_date": 1469619561,
                "last_edit_date": 1469619561,
                "last_editor": {
                    "accept_rate": 79,
                    "badge_counts": {
                        "bronze": 31,
                        "gold": 0,
                        "silver": 4
                    },
                    "display_name": "BusyAnt",
                    "link": "http://stackoverflow.com/users/5018771/busyant",
                    "profile_image": "https://www.gravatar.com/avatar/6dec254b17d75df0cfa8c42806cfca3f?s=128&d=identicon&r=PG&f=1",
                    "reputation": 590,
                    "user_id": 5018771,
                    "user_type": "registered"
                },
                "link": "http://stackoverflow.com/questions/38611467/python-get-every-possible-combination-of-weights-for-a-portfolio/38611752#38611752",
                "owner": {
                    "accept_rate": 79,
                    "badge_counts": {
                        "bronze": 31,
                        "gold": 0,
                        "silver": 4
                    },
                    "display_name": "BusyAnt",
                    "link": "http://stackoverflow.com/users/5018771/busyant",
                    "profile_image": "https://www.gravatar.com/avatar/6dec254b17d75df0cfa8c42806cfca3f?s=128&d=identicon&r=PG&f=1",
                    "reputation": 590,
                    "user_id": 5018771,
                    "user_type": "registered"
                },
                "question_id": 38611467,
                "score": 0,
                "tags": [],
                "title": "Python: get every possible combination of weights for a portfolio",
                "up_vote_count": 0
            }
        ],
        "body_markdown": "I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. I think this problem can be solved using either itertools or cartesian, but I'm fairly new to Python and am struggling to use these:\r\n\r\nI have a portfolio of 5 stocks, where each stock can have a weighting of -0.4, -0.2, 0, 0.2 or 0.4, with weightings adding up to 0. How do I create a function that produces a list of every possible combination of weights. e.g. [-0.4, 0.2, 0, 0.2, 0]... etc\r\n\r\nIdeally, the function would work for n stocks, as I will eventually want to do the same process for 50 stocks. ",
        "can_close": false,
        "can_flag": false,
        "close_vote_count": 0,
        "comment_count": 2,
        "comments": [
            {
                "can_flag": false,
                "comment_id": 64609951,
                "creation_date": 1469619501,
                "edited": false,
                "link": "http://stackoverflow.com/questions/38611467/python-get-every-possible-combination-of-weights-for-a-portfolio#comment64609951_38611467",
                "owner": {
                    "badge_counts": {
                        "bronze": 28,
                        "gold": 3,
                        "silver": 13
                    },
                    "display_name": "PM 2Ring",
                    "link": "http://stackoverflow.com/users/4014959/pm-2ring",
                    "profile_image": "https://i.stack.imgur.com/GdqQJ.jpg?s=128&g=1",
                    "reputation": 14923,
                    "user_id": 4014959,
                    "user_type": "registered"
                },
                "post_id": 38611467,
                "post_type": "question",
                "score": 0
            },
            {
                "can_flag": false,
                "comment_id": 64609984,
                "creation_date": 1469619550,
                "edited": false,
                "link": "http://stackoverflow.com/questions/38611467/python-get-every-possible-combination-of-weights-for-a-portfolio#comment64609984_38611467",
                "owner": {
                    "accept_rate": 81,
                    "badge_counts": {
                        "bronze": 40,
                        "gold": 1,
                        "silver": 9
                    },
                    "display_name": "Rawing",
                    "link": "http://stackoverflow.com/users/1222951/rawing",
                    "profile_image": "https://www.gravatar.com/avatar/ed60dd64f209aae5c84ddd9081c0942a?s=128&d=identicon&r=PG",
                    "reputation": 6402,
                    "user_id": 1222951,
                    "user_type": "registered"
                },
                "post_id": 38611467,
                "post_type": "question",
                "score": 0
            }
        ],
        "creation_date": 1469618243,
        "delete_vote_count": 0,
        "down_vote_count": 0,
        "favorite_count": 0,
        "is_answered": false,
        "last_activity_date": 1469619561,
        "link": "http://stackoverflow.com/questions/38611467/python-get-every-possible-combination-of-weights-for-a-portfolio",
        "owner": {
            "badge_counts": {
                "bronze": 2,
                "gold": 0,
                "silver": 0
            },
            "display_name": "Chris Waller",
            "link": "http://stackoverflow.com/users/6644341/chris-waller",
            "profile_image": "https://www.gravatar.com/avatar/14494a73895d34ba5cc8c58b236981c7?s=128&d=identicon&r=PG&f=1",
            "reputation": 16,
            "user_id": 6644341,
            "user_type": "registered"
        },
        "question_id": 38611467,
        "reopen_vote_count": 0,
        "score": 3,
        "tags": [
            "python",
            "list",
            "itertools",
            "cartesian-product"
        ],
        "title": "Python: get every possible combination of weights for a portfolio",
        "up_vote_count": 3,
        "view_count": 30
    },
    "origin": "stackoverflow",
    "perceval_version": "0.2.0",
    "tag": "stackoverflow-test",
    "timestamp": 1469619644.7069,
    "updated_on": 1469619561.0,
    "uuid": "0fd3068ee3b9dac0187f2208e220fadac120eb2f"
},
{
    "backend_name": "StackExchange",
    "backend_version": "0.2.0",
    "data": {
        "answer_count": 0,
        "body_markdown": "I am a beginner student in a python coding class. I have the majority of the done and the program itself works, however I need to figure out a way to make the program ask if wants a subtraction or an adding problem, and if the user would like another question. I asked my teacher for assistance and he hasn't gotten back to me, so I'm simply trying to figure out and understand what exactly I need to do.\r\n\r\n    import random\r\n\r\n    x = int(input(\"Please enter an integer: \")) \r\n     if x < 0:\r\n    \r\n        x = 0\r\n    \r\n        print('Negative changed to zero')\r\n    \r\n     elif x == 0:\r\n    \r\n        print('Zero')\r\n    \r\n     elif x == 1:\r\n    \r\n         print('Single')\r\n    \r\n     else:\r\n    \r\n         print('More')    \r\n\r\n     maximum = 10 ** x;\r\n     maximum += 1\r\n     firstnum = random.randrange(1,maximum)       # return an int from 1 to 100\r\n\r\n     secondnum = random.randrange(1, maximum)\r\n\r\n     compsum = firstnum + secondnum           # adds the 2 random numbers together\r\n\r\n    #  print (compsum)                       # print for troubleshooting\r\n\r\n     print(\"What is the sum of\", firstnum, \" +\", secondnum, \"?\")    # presents problem to user\r\n\r\n     added = int(input(\"Your answer is: \"))   # gets user input\r\n\r\n     if added == compsum:                     # compares user input to real answer\r\n\r\n       print(\"You are correct!!!\")\r\n\r\n     else:\r\n\r\n       print (\"Sorry, you are incorrect\") ",
        "can_close": false,
        "can_flag": false,
        "close_vote_count": 0,
        "comment_count": 0,
        "creation_date": 1469619535,
        "delete_vote_count": 0,
        "down_vote_count": 1,
        "favorite_count": 0,
        "is_answered": false,
        "last_activity_date": 1469619535,
        "link": "http://stackoverflow.com/questions/38611900/i-need-to-figure-out-how-to-make-my-program-repeat-python-coding-class",
        "owner": {
            "badge_counts": {
                "bronze": 2,
                "gold": 0,
                "silver": 0
            },
            "display_name": "Packy502",
            "link": "http://stackoverflow.com/users/6643935/packy502",
            "profile_image": "https://www.gravatar.com/avatar/b877c8ffe79daaba779ce14c3fd1f4b4?s=128&d=identicon&r=PG&f=1",
            "reputation": 2,
            "user_id": 6643935,
            "user_type": "registered"
        },
        "question_id": 38611900,
        "reopen_vote_count": 0,
        "score": -1,
        "tags": [
            "python"
        ],
        "title": "I need to figure out how to make my program repeat. (Python coding class)",
        "up_vote_count": 0,
        "view_count": 9
    },
    "origin": "stackoverflow",
    "perceval_version": "0.2.0",
    "tag": "stackoverflow-test",
    "timestamp": 1469619644.708539,
    "updated_on": 1469619535.0,
    "uuid": "3d23ae2ab783b939b354057b20671c55fa4f2187"
},
{
    "backend_name": "StackExchange",
    "backend_version": "0.2.0",
    "data": {
        "answer_count": 1,
        "answers": [
            {
                "answer_id": 1,
                "body_markdown": "",
                "can_flag": false,
                "comment_count": 0,
                "creation_date": 1459975066,
                "down_vote_count": 0,
                "is_accepted": false,
                "last_activity_date": 1459975066,
                "link": "",
                "owner": {
                    "badge_counts": {
                        "bronze": 39,
                        "gold": 2,
                        "silver": 22
                    },
                    "display_name": "zhquan_example_1",
                    "link": "http://stackoverflow.com/users/1/zhquan_example_1",
                    "profile_image": "",
                    "reputation": 5575,
                    "user_id": 1,
                    "user_type": "registered"
                },
                "question_id": 1,
                "score": 0,
                "tags": [],
                "title": "",
                "up_vote_count": 0
            }
        ],
        "body_markdown": "",
        "can_close": false,
        "can_flag": false,
        "close_vote_count": 0,
        "comment_count": 1,
        "comments": [
            {
                "can_flag": false,
                "comment_id": 60495069,
                "creation_date": 1459909111,
                "edited": false,
                "link": "",
                "owner": {
                    "badge_counts": {
                        "bronze": 11,
                        "gold": 0,
                        "silver": 0
                    },
                    "display_name": "zhquan_example_2",
                    "link": "http://stackoverflow.com/users/2/zhquan_example_2",
                    "profile_image": "",
                    "reputation": 56,
                    "user_id": 2,
                    "user_type": "registered"
                },
                "post_id": 1,
                "post_type": "question",
                "score": 0
            }
        ],
        "creation_date": 1459908076,
        "delete_vote_count": 0,
        "down_vote_count": 0,
        "favorite_count": 0,
        "is_answered": false,
        "last_activity_date": 1459975066,
        "link": "question",
        "owner": {
            "accept_rate": 68,
            "badge_counts": {
                "bronze": 15,
                "gold": 0,
                "silver": 3
            },
            "display_name": "zhquan_example_3",
            "link": "http://stackoverflow.com/users/3/zhquan_example_3",
            "profile_image": "",
            "reputation": 531,
            "user_id": 3,
            "user_type": "registered"
        },
        "question_id": 1,
        "reopen_vote_count": 0,
        "score": 1,
        "tags": [
            "python",
            "pandas"
        ],
        "title": "",
        "up_vote_count": 1,
        "view_count": 17
    },
    "origin": "stackoverflow",
    "perceval_version": "0.9.10",
    "tag": "stackoverflow-test",
    "timestamp": 1518165823.432987,
    "updated_on": 1459975066.0,
    "uuid": "43953bd75d1d4dbedb457059acb4b79fcf6712a8"
}]