name: release

on:
  push:
    tags:
      - '*.*.*'
      - '*.*.*-*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Build package using Poetry and store result.
        uses: chaoss/grimoirelab-github-actions/build@main
        with:
          artifact-name: grimoire-elk-dist
          artifact-path: dist

  tests:
    needs: [build]
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mariadb:10.5
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    name: Python ${{ matrix.python-version }} for ES ${{ matrix.elasticsearch-version }}
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']
        elasticsearch-version: [ 6.8.6, 7.2.0 ]
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Download distribution artifact
        uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # v4.1.4
        with:
          name: grimoire-elk-dist
          path: dist

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          pipx install poetry

      - name: Runs Elasticsearch ${{ matrix.elasticsearch-version }}
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: ${{ matrix.elasticsearch-version }}

      - name: Install dev dependencies
        run: |
          poetry install --only dev --no-root

      - name: Verify Elasticsearch connection
        run: |
          curl -fsSL "http://localhost:9200/_cat/health?h=status"

      - name: Install the package
        run: |
          PACKAGE=`(cd dist && ls *whl)` && echo $PACKAGE
          poetry run pip install --pre ./dist/$PACKAGE

      - name: Run Sortinghat Server
        env:
          SORTINGHAT_SECRET_KEY: "my-secret-key"
          SORTINGHAT_DB_DATABASE: 'test_sh'
          SORTINGHAT_DB_PASSWORD: 'root'
          SORTINGHAT_SUPERUSER_USERNAME: "admin"
          SORTINGHAT_SUPERUSER_PASSWORD: "admin"
        run: |
          poetry run sortinghat-admin --config sortinghat.config.settings setup --no-interactive
          poetry run sortinghatd --dev --config sortinghat.config.settings &
          poetry run sortinghatw --config sortinghat.config.settings &

      - name: Test package
        run: |
          cd tests && poetry run python run_tests.py

  release:
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - name: Create a new release for the repository.
        uses: chaoss/grimoirelab-github-actions/release@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - name: Publish the package in PyPI.
        uses: chaoss/grimoirelab-github-actions/publish@main
        with:
          artifact-name: grimoire-elk-dist
          artifact-path: dist
          pypi-api-token: ${{ secrets.PYPI_API_TOKEN }}
